import React, { useState, useEffect } from 'react'
import { Card, FormField, Loader } from '../components';

const RenderCards = ({ data, postCount, title }) => {
      return (
            <>
                  <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                        {data && data.length > 0 ? (
                              data.map((post) => <Card
                                    key={post._id} post={post} />)
                        ) : (
                              <p>No posts found</p>
                        )}
                  </div>
            </>
      );
};


const Home = () => {
      const [loading, setLoading] = useState(false)
      const [allPosts, setAllPosts] = useState(null)
      const [searchText, setSearchText] = useState('')
      const [searchedResults, setSearchedResults] = useState(null)
      const [searchTimeout, setSearchTimeout] = useState(null)


      //stuck in here not able to show Card data to the user 
      useEffect(() => {

            const fetchPosts = async () => {
                  setLoading(true)

                  try {
                        const response = await fetch('http://localhost:8080/api/v1/post',
                              {
                                    method: 'GET',
                                    headers: {
                                          'Content-Type': 'application/json'
                                    },
                              })
                        if (response.ok) {
                              const result = await response.json(); // Destructure the 'data' property
                              console.log(result); // Verify the structure of 'data' in the console
                              setAllPosts(result.data.reverse());
                        }
                  } catch (error) {
                        alert(error)
                  } finally {
                        setLoading(false)
                  }
            }
            fetchPosts();
      }, []);

      const postCount = allPosts ? allPosts.length : 0;

      //search img filtering code snippet
      const handleSearchChange = (e) => {
            clearTimeout(searchTimeout)
            setSearchText(e.target.value);


            setSearchTimeout(
                  setTimeout(() => {
                        const searchResults = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()))
                        setSearchedResults(searchResults);
                  }, 500)
            )

      }

      return (
            <>
                  <section className='max-w-7xl mx-auto'>
                        <div>
                              <h1 className='font-extrabold text-[32px]'>The Community Showcase</h1>
                              <p className='mt-2 text-[#666e75] text-[16px] '>Browse through a collection of imaginative and visually stunning images generated by DALL-E</p>
                        </div>
                        <div className='mt-16 '>

                              <FormField
                                    LabelName="Search Posts"
                                    Type="text"
                                    name="text"
                                    placeholder="Search Posts"
                                    value={searchText}
                                    handleChange={handleSearchChange}
                              />

                        </div>
                        <div className='mt-10'>
                              {/* loader for the images */}
                              {loading ? (
                                    <div className="flex justify-center items-center">
                                          <Loader />
                                    </div>
                              ) : (
                                    <>
                                          {searchText && (
                                                <h2 className='font-medium text-[#666e75] text-xl mb-3' >
                                                      Showing results for <span className='text-[#222328]'> {searchText}</span>
                                                </h2>
                                          )}

                                          {/* <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-conls-2  grid-conls-2  gap-3'> */}
                                          <div className=''>

                                                {searchText ? (<RenderCards data={searchedResults}
                                                      title="No Search result found" />
                                                ) : (<RenderCards data={allPosts} title="No Posts Found " />)
                                                }
                                          </div>

                                          {/* <RenderCards data={allPosts} postCount={postCount} title="No Posts Found" /> */}
                                    </>
                              )}
                        </div>
                  </section>
            </>
      )
}
export default Home;